#! /bin/sh
#***************************************************************************
#                                  _   _ ____  _
#  Project                     ___| | | |  _ \| |
#                             / __| | | | |_) | |
#                            | (__| |_| |  _ <| |___
#                             \___|\___/|_| \_\_____|
#
# Copyright (C) 2001 - 2012, Daniel Stenberg, <daniel@haxx.se>, et al.
#
# This software is licensed as described in the file COPYING, which
# you should have received as part of this distribution. The terms
# are also available at http://curl.haxx.se/docs/copyright.html.
#
# You may opt to use, copy, modify, merge, publish, distribute and/or sell
# copies of the Software, and permit persons to whom the Software is
# furnished to do so, under the terms of the COPYING file.
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
# KIND, either express or implied.
#
###########################################################################

prefix=/usr/local
exec_prefix=${prefix}
includedir=${prefix}/include
cppflag_curl_staticlib=

usage()
{
    cat <<EOF
Usage: curl-config [OPTION]

Available values for OPTION include:

  --built-shared says 'yes' if libcurl was built shared
  --ca        ca bundle install path
  --cc        compiler
  --cflags    pre-processor and compiler flags
  --checkfor [version] check for (lib)curl of the specified version
  --configure the arguments given to configure when building curl
  --features  newline separated list of enabled features
  --help      display this help and exit
  --libs      library linking information
  --prefix    curl install prefix
  --protocols newline separated list of enabled protocols
  --static-libs static libcurl library linking information
  --version   output version information
  --vernum    output the version information as a number (hexadecimal)
EOF

    exit $1
}

if test $# -eq 0; then
    usage 1
fi

while test $# -gt 0; do
    case "$1" in
    # this deals with options in the style
    # --option=value and extracts the value part
    # [not currently used]
    -*=*) value=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
    *) value= ;;
    esac

    case "$1" in
    --built-shared)
        echo yes
        ;;

    --ca)
        echo ""
        ;;

    --cc)
        echo "arm-uclibc-linux-2.6.36-gcc"
        ;;

    --prefix)
        echo "$prefix"
        ;;

    --feature|--features)
        for feature in SSL NTLM NTLM_WB ""; do
            test -n "$feature" && echo "$feature"
        done
        ;;

    --protocols)
        for protocol in HTTP HTTPS; do
            echo "$protocol"
        done
        ;;

    --version)
        echo libcurl 7.36.0
        exit 0
        ;;

    --checkfor)
        checkfor=$2
        cmajor=`echo $checkfor | cut -d. -f1`
        cminor=`echo $checkfor | cut -d. -f2`
        # when extracting the patch part we strip off everything after a
        # dash as that's used for things like version 1.2.3-CVS
        cpatch=`echo $checkfor | cut -d. -f3 | cut -d- -f1`
        checknum=`echo "$cmajor*256*256 + $cminor*256 + ${cpatch:-0}" | bc`
        numuppercase=`echo 072400 | tr 'a-f' 'A-F'`
        nownum=`echo "obase=10; ibase=16; $numuppercase" | bc`

        if test "$nownum" -ge "$checknum"; then
          # silent success
          exit 0
        else
          echo "requested version $checkfor is newer than existing 7.36.0"
          exit 1
        fi
        ;;

    --vernum)
        echo 072400
        exit 0
        ;;

    --help)
        usage 0
        ;;

    --cflags)
        if test "X$cppflag_curl_staticlib" = "X-DCURL_STATICLIB"; then
          CPPFLAG_CURL_STATICLIB="-DCURL_STATICLIB "
        else
          CPPFLAG_CURL_STATICLIB=""
        fi
        if test "X${prefix}/include" = "X/usr/include"; then
          echo "$CPPFLAG_CURL_STATICLIB"
        else
          echo "${CPPFLAG_CURL_STATICLIB}-I${prefix}/include"
        fi
        ;;

    --libs)
        if test "X${exec_prefix}/lib" != "X/usr/lib" -a "X${exec_prefix}/lib" != "X/usr/lib64"; then
           CURLLIBDIR="-L${exec_prefix}/lib "
        else
           CURLLIBDIR=""
        fi
        if test "Xno" = "Xyes"; then
          echo ${CURLLIBDIR}-lcurl -lssl -lcrypto
        else
          echo ${CURLLIBDIR}-lcurl
        fi
        ;;

    --static-libs)
        if test "Xyes" != "Xno" ; then
          echo ${exec_prefix}/lib/libcurl.a  -lssl -lcrypto
        else
          echo "curl was built with static libraries disabled" >&2
          exit 1
        fi
        ;;

    --configure)
        echo " '--host=arm-linux' 'CC=arm-uclibc-linux-2.6.36-gcc' '--enable-shared' '--with-ssl' '--disable-manual' '--disable-proxy' '--without-zlib' '--disable-cookies' '--disable-ipv6' '--disable-dict' '--disable-file' '--disable-ftp' '--disable-gopher' '--disable-imap' '--disable-pop3' '--disable-smtp' '--disable-telnet' '--disable-tftp' '--disable-rtsp' 'host_alias=arm-linux' 'CFLAGS=-Os -O2 -DNETGEAR_PATCH -DBCMNVRAM -DBCMWPA2 -D__CONFIG_DHDAP__ -DRESTART_ALL_PROCESSES -D__CONFIG_GMAC3__ -D__CONFIG_USBAP__ -DBCMQOS -DBCMWPS -D__CONFIG_WPS__ -D__CONFIG_EMF__ -DTRAFFIC_MGMT_RSSI_POLICY -DPHYMON -DSUPPORT_REMOTE_HTTPS -DREMOTE_SMB_CONF -DREMOTE_USER_CONF -DUSERSETUP_SUPPORT -DXAGENT_CLOUD_SUPPORT -DINCLUDE_WPS_V20 -DOPENDNS_PARENTAL_CONTROL -DINCLUDE_ACCESSCONTROL -DINCLUDE_UCP -DU12H315 -DR8000 -DR7800 -DINCLULDE_2ND_5G_RADIO -DDUAL_TRI_BAND_HW_SUPPORT -DPORT_TRUNKING_SUPPORT -DMULTIPLE_SSID -DENABLE_ML -DOPEN_SOURCE_SUPPORT -DBCM53125 -DBCM5301X -DACS_INTF_DETECT_PATCH -DCONFIG_RUSSIA_IPTV -DCONFIG_SAMBA_NO_RESTART -DLED_GPIO_SWITCH -DFBWIFI_FLAG -DDLNA -DHTTP_ACCESS_USB -DMAX_USB_ACCESS -DSAMBA_ENABLE -DUSB_NEW_SPEC -DINCLUDE_WIFI_BUTTON -DINCLUDE_USB_LED -DINCLUDE_DUAL_BAND -DSINGLE_FIRMWARE -DINCLUDE_GET_ST_CHKSUM -DUNIFIED_STR_TBL -DFIRST_MTD_ROTATION -DWIFI_ON_OFF_SCHE -DAUTO_CONN_24HR -DIGMP_PROXY -DAP_MODE -D__CONFIG_IGMP_SNOOPING__ -DLINUX26 -DINCLUDE_IPV6 -DPRESET_WL_SECURITY -DNEW_BCM_WPS_IPC -DSUPPORT_AC_MODE -DSTA_MODE -DPPP_RU_DESIGN -DEXT_ACS -DARP_PROTECTION -DCONFIG_2ND_5G_BRIDGE_MODE -DVLAN_SUPPORT -DCONFIG_2ND_SWITCH -DBCM_DCS -DEXT_ACS -DBCM_BSD -DMFP -DDEBUG_BUTTOND -D__CONFIG_TREND_IQOS__ -DCONFIG_TREND_IQOS_ENABLED -Os -DLINUX26 -DCONFIG_KERNEL_2_6_36 -DXAGENT_CLOUD_SUPPORT' 'CPP=arm-brcm-linux-uclibcgnueabi-gcc -E'"
        ;;

    *)
        echo "unknown option: $1"
        usage 1
        ;;
    esac
    shift
done

exit 0
